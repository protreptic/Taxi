// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Pong.proto at 6:1
package name.peterbukhal.android.taxi.protocol;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Pong extends Message<Pong, Pong.Builder> {
  public static final ProtoAdapter<Pong> ADAPTER = new ProtoAdapter<Pong>(FieldEncoding.LENGTH_DELIMITED, Pong.class) {
    @Override
    public int encodedSize(Pong value) {
      return ProtoAdapter.INT64.encodedSizeWithTag(1, value.timestamp)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Pong value) throws IOException {
      ProtoAdapter.INT64.encodeWithTag(writer, 1, value.timestamp);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Pong decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.timestamp(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Pong redact(Pong value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  };

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_TIMESTAMP = 0L;

  public final Long timestamp;

  public Pong(Long timestamp) {
    this(timestamp, ByteString.EMPTY);
  }

  public Pong(Long timestamp, ByteString unknownFields) {
    super(unknownFields);
    this.timestamp = timestamp;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.timestamp = timestamp;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Pong)) return false;
    Pong o = (Pong) other;
    return equals(unknownFields(), o.unknownFields())
        && equals(timestamp, o.timestamp);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (timestamp != null ? timestamp.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (timestamp != null) builder.append(", timestamp=").append(timestamp);
    return builder.replace(0, 2, "Pong{").append('}').toString();
  }

  public static final class Builder extends com.squareup.wire.Message.Builder<Pong, Builder> {
    public Long timestamp;

    public Builder() {
    }

    public Builder timestamp(Long timestamp) {
      this.timestamp = timestamp;
      return this;
    }

    @Override
    public Pong build() {
      if (timestamp == null) {
        throw missingRequiredFields(timestamp, "timestamp");
      }
      return new Pong(timestamp, buildUnknownFields());
    }
  }
}
